.container {
  text-align: center;
  position: relative;

  > * {
    position: relative;
    z-index: 2;
  }
  p {
    font-size: 1.5rem;

    @include min('tablet') {
      font-size: 2rem;
    }
  }
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 75vw;
    height: 20vh;
    border-radius: 75vw;
    filter: blur(30vw);
    background-color: var(--third-color);
    transform: translate(-50%, -50%);
    opacity: 0.3;
    z-index: 1;

    @include min('tablet') {
      opacity: 0.4;
    }
  }
  .shapeContainer {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    overflow: hidden;
    opacity: 0.8;
    z-index: 1;

    @include min('tablet') {
      opacity: 1;
    }
    svg {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 200%;
      transform: translate(-50%, -50%) rotate(60deg);

      @include min('tablet') {
        width: 120%;
        transform: translate(-50%, -50%);
      }
      .shape {
        fill: var(--background-color);
      }
    }
  }
  .messages {
    margin: 0 auto;
    padding: 0 1rem;
    list-style: none;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    max-width: 60rem;

    @include min('tablet') {
      padding: 0 2rem;
    }
    .question,
    .answer {
      max-width: 70%;

      a {
        color: var(--third-color);
      }
    }
    .question,
    .chatbotQuestion textarea,
    .answer {
      @include glassmorphism;
      padding: 0.5rem 1rem;
      border-radius: 1rem;
      font-size: 1rem;
      line-height: 1.125rem;
      text-align: left;

      @include min('tablet') {
        font-size: 1.25rem;
        line-height: 1.5rem;
      }
      @include min('desktop') {
        font-size: 1.5rem;
        line-height: 2rem;
      }
      &:last-child {
        margin-bottom: 0;
      }
    }
    .question,
    .chatbotQuestion textarea {
      border-bottom-left-radius: 0;
      margin-bottom: 0.5rem;
      background: rgba(116, 141, 146, 0.2);
      border: 2px solid rgba(116, 141, 146, 0.22);

      @include min('tablet') {
        margin-bottom: 1rem;
      }
    }
    .chatbotQuestion {
      display: flex;
      align-items: flex-start;
      flex-direction: column;
      width: 100%;
      margin-bottom: 0.5rem;

      @include min('tablet') {
        flex-direction: row;
        margin-bottom: 1rem;
        max-width: 70%;
      }
      .questionInput {
        max-width: 100%;
        width: 100%;
        text-align: left;

        @include min('tablet') {
          width: 70%;
        }
        textarea {
          margin: 0;
          border: 2px solid rgba(116, 141, 146, 0.22);
          outline: 2px solid transparent;
          display: block;
          width: 100%;
          appearance: none;
          color: var(--text-color);
          font-family: var(--primary-font);
          height: calc(2.125rem + 4px);
          min-height: 2.125rem;
          resize: none;
          transition: 0.2s all ease-in-out;

          @include min('tablet') {
            height: calc(3rem + 4px);
            min-height: 3rem;
          }
          &:focus-visible {
            background-color: var(--text-color);
          }
        }
        .errorMessage,
        .infoMessage {
          font-size: 0.75rem;
          margin-top: 0.25rem;
        }
        .errorMessage {
          color: #c81432;
        }
      }
      .buttons {
        width: 100%;
        display: flex;
        flex-direction: row-reverse;
        justify-content: flex-start;
        align-items: flex-start;
        gap: 1rem;
        margin-top: 0.5rem;

        @include min('tablet') {
          gap: 0.5rem;
          width: auto;
          margin-top: 0;
          margin-left: 1rem;
          flex-direction: column;
        }
        @include min('desktop') {
          gap: 1rem;
        }
      }
      button {
        @include button;
        & {
          padding: 0.875rem 1rem;
          font-size: 1rem !important;

          @include max('mobile') {
            padding: 0.5rem 1rem;
          }
        }
        @media (hover: hover) {
          &:hover {
            @include buttonHover;
          }
        }
        &:focus-visible {
          @include buttonFocus;
        }
        svg {
          display: block;
          width: 1.5rem;
          height: 1.5rem;
        }
      }
      &.chatbotQuestionFocused {
        textarea {
          min-height: 4.5rem;
          height: 2.25rem;

          @include min('tablet') {
            min-height: 7.5rem;
            height: 3.75rem;
          }
          @include min('desktop') {
            min-height: 8rem;
            height: 4rem;
          }
        }
      }
    }
    .answer {
      margin-left: auto;
      border-bottom-right-radius: 0;
      margin-bottom: 1rem;

      @include min('tablet') {
        margin-bottom: 2rem;
      }
      &.answerBot {
        margin-top: 0.5rem;

        @include min('tablet') {
          margin-top: 0;
        }
      }
      .list {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        list-style: none;
        gap: 1rem;
        margin: 0;
        padding: 0;
        margin-top: 0.5rem;

        @include min('tablet') {
          margin-top: 1rem;
        }
        .item_flag,
        .item_list {
          display: flex;
          align-items: center;
          width: 2rem;
          height: 2rem;

          @include min('tablet') {
            width: 2.5rem;
            height: 2.5rem;
          }
        }
        .item_flag {
          display: block;
          border-radius: 50%;
          overflow: hidden;

          svg {
            width: 100%;
            height: 100%;
          }
        }
        .item_percentage {
          --v: calc(((18 / 5) * var(--p) - 90) * 1deg);
          width: 2.5rem;
          height: 2.5rem;
          padding: 0.25rem;
          border-radius: 2.5rem;
          background:
            linear-gradient(var(--background-color), var(--background-color))
              content-box,
            linear-gradient(
                var(--v),
                var(--background-color) 50%,
                transparent 0
              )
              0 / min(100%, (50 - var(--p)) * 100%),
            linear-gradient(var(--v), transparent 50%, var(--fourth-color) 0) 0 /
              min(100%, (var(--p) - 50) * 100%),
            linear-gradient(
              to right,
              var(--background-color) 50%,
              var(--fourth-color) 0
            );

          @include min('tablet') {
            width: 3rem;
            height: 3rem;
          }
        }
        .item_logo {
          svg {
            display: block;
            height: 2rem;

            @include min('tablet') {
              height: 2.5rem;
            }
          }
        }
      }
    }
  }
}

@keyframes dotAnimation {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-0.25rem);

    @include min('tablet') {
      transform: translateY(-0.5rem);
    }
  }
}

.loading {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin: 0.1875rem 0;

  @include min('tablet') {
    gap: 0.75rem;
    margin: 0.375rem 0;
  }
  @include min('desktop') {
    margin: 0.5rem 0;
  }
  .dot {
    @include neumorphism;
    background-color: var(--fourth-color);
    width: 0.75rem;
    height: 0.75rem;
    border-radius: 0.375rem;
    animation: 0.6s dotAnimation alternate infinite;

    @include min('desktop') {
      width: 1rem;
      height: 1rem;
      border-radius: 0.5rem;
    }
    &:nth-child(2) {
      animation-delay: 0.1s;
    }
    &:nth-child(3) {
      animation-delay: 0.2s;
    }
  }
}
